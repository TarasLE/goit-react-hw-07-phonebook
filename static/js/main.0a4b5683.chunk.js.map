{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","components/Notification/Notification.js","components/Contactform/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/ContactList/ContactList.js","components/Loader/Loader.js","components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reducers.js","redux/phonebook/store.js","index.js","components/Contactform/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","components/Notification/Notification.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contact","dispatch","a","post","data","contactId","delete","get","Notification","sameContact","currentNumber","className","styles","ContactForm","state","name","number","alert","handleContact","event","currentTarget","value","setState","handleSubmit","preventDefault","checkContact","id","shortid","generate","props","addContact","clearInput","contacts","find","toLowerCase","alertState","setTimeout","Container","type","this","onChange","FormInput","onClick","FormBtn","CSSTransition","in","timeout","classNames","enter","ContactFormNotificationFadeEnter","enterActive","ContactFormNotificationFadeEnterActive","exit","ContactFormNotificationFadeExit","exitActive","ContactFormNotificationFadeExitActive","unmountOnExit","Component","connect","items","phonebookOperations","getFilter","filter","getContacts","getLoading","loading","getfilteredElements","createSelector","normalizedFilter","includes","ContactList","filteredContacts","deleteContact","resetFilter","TransitionGroup","component","classnames","ListContainer","map","ContactListItemFadeEnter","ContactListItemFadeEnterActive","ContactListItemFadeExit","ContactListItemFadeExitActive","Contact","ContactInfo","length","DeleteBtn","phonebookSelectors","Loader","color","height","width","FilterFadeEnter","FilterFadeEnterActive","FilterFadeExit","FilterFadeExitActive","InputContainer","FilterHeader","FilterInput","App","fetchContacts","appear","HeaderFadeAppear","appearActive","HeaderFadeAppearActive","isLosdingContats","contactSelectors","createReducer","payload","error","combineReducers","phonebookPersistConfig","storage","key","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","phoneBookReducer","devTools","process","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0a4b5683.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactList_Container__22yc1\",\"ListContainer\":\"ContactList_ListContainer__1be69\",\"Contact\":\"ContactList_Contact__2TcoS\",\"DeleteBtn\":\"ContactList_DeleteBtn__1mBFI\",\"ContactInfo\":\"ContactList_ContactInfo__jYeAR\",\"ContactListItemFadeEnter\":\"ContactList_ContactListItemFadeEnter__knh3O\",\"ContactListItemFadeEnterActive\":\"ContactList_ContactListItemFadeEnterActive__qwgr4\",\"ContactListItemFadeExit\":\"ContactList_ContactListItemFadeExit__1VuGM\",\"ContactListItemFadeExitActive\":\"ContactList_ContactListItemFadeExitActive__2SSjD\",\"ContactListItemFadeAppear\":\"ContactList_ContactListItemFadeAppear__1k1pp\",\"ContactListItemFadeAppearActive\":\"ContactList_ContactListItemFadeAppearActive__26T1a\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess')\r\nexport const fetchContactError = createAction('contact/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest')\r\nexport const addContactSuccess = createAction('contact/addContactSuccess')\r\nexport const addContactError = createAction('contact/addContactError')\r\n\r\nexport const deleteContactRequest = createAction('contact/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('contact/deleteContactSuccess')\r\nexport const deleteContactError = createAction('contact/deleteContactError')\r\n\r\nexport const deleteContact = createAction('contact/delete')\r\nexport const changeFilter = createAction('contact/changeFilter')\r\n","import axios from 'axios'\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './phonebook-actions'\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040'\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n    dispatch(fetchContactRequest())\r\n    try {\r\n        const { data } = await axios.get('/contacts')\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error))\r\n    }\r\n}\r\n\r\nconst addContact = (contact) => async (dispatch) => {\r\n    dispatch(addContactRequest())\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact)\r\n        dispatch(addContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactError(error))\r\n    }\r\n}\r\n\r\nconst deleteContact = (contactId) => async (dispatch) => {\r\n    dispatch(deleteContactRequest())\r\n    try {\r\n        const { data } = await axios.delete(`/contacts/${contactId}`)\r\n        dispatch(deleteContactSuccess(contactId))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error))\r\n    }\r\n}\r\n\r\nexport default { addContact, deleteContact, fetchContacts }\r\n","import React, { Component } from 'react'\r\nimport styles from './Notification.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nNotification.propTypes = {\r\n    sameContact: PropTypes.string.isRequired,\r\n}\r\n\r\nfunction Notification({ sameContact, currentNumber }) {\r\n    return (\r\n        <div className={styles.Notification}>\r\n            {/* <h2>{sameContact} is already in contacts</h2> */}\r\n            {sameContact && currentNumber ? (\r\n                <div>\r\n                    <h2>{sameContact} is already in contacts</h2>\r\n                    <h3>Please check name and try again</h3>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Name or number is epmty</h2>\r\n                    <h3>Please fill data and try again</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport './ContactForm.css'\r\nimport Notification from '../Notification/Notification'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.addContact(contact)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() ===\r\n                        this.state.name.toLowerCase() &&\r\n                    contact.number.toLowerCase() ===\r\n                        this.state.number.toLowerCase()\r\n                )\r\n            }) ||\r\n            this.state.name == '' ||\r\n            this.state.number == ''\r\n        ) {\r\n            this.setState({ alert: true })\r\n            this.alertState()\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        setTimeout(() => {\r\n            this.setState({ alert: false })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={this.handleSubmit}\r\n                    className={styles.FormBtn}\r\n                >\r\n                    Add contact\r\n                </button>\r\n                <CSSTransition\r\n                    in={this.state.alert}\r\n                    timeout={250}\r\n                    classNames={{\r\n                        enter: styles.ContactFormNotificationFadeEnter,\r\n                        enterActive:\r\n                            styles.ContactFormNotificationFadeEnterActive,\r\n                        exit: styles.ContactFormNotificationFadeExit,\r\n                        exitActive:\r\n                            styles.ContactFormNotificationFadeExitActive,\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <Notification\r\n                        sameContact={this.state.name}\r\n                        currentNumber={this.state.number}\r\n                    ></Notification>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addContact: (contact) => dispatch(phonebookOperations.addContact(contact)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import { createSelector } from '@reduxjs/toolkit'\r\nconst getLoading = (state) => state.contacts.loading\r\nconst getFilter = (state) => state.contacts.filter\r\nconst getContacts = (state) => state.contacts.items\r\n\r\nconst getfilteredElements = createSelector(\r\n    [getFilter, getContacts],\r\n    (filter, contacts) => {\r\n        const normalizedFilter = filter.toLowerCase()\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(normalizedFilter)\r\n        )\r\n    }\r\n)\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getfilteredElements,\r\n    getContacts,\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nimport './ContactList.css'\r\n\r\nclass ContactList extends Component {\r\n    render() {\r\n        const {\r\n            filteredContacts,\r\n            contacts,\r\n            deleteContact,\r\n            resetFilter,\r\n        } = this.props\r\n        return (\r\n            <div className={styles.Container}>\r\n                <TransitionGroup\r\n                    component=\"ul\"\r\n                    classnames={styles.ListContainer}\r\n                >\r\n                    {filteredContacts.map((contact) => (\r\n                        <CSSTransition\r\n                            timeout={250}\r\n                            classNames={{\r\n                                enter: styles.ContactListItemFadeEnter,\r\n                                enterActive:\r\n                                    styles.ContactListItemFadeEnterActive,\r\n                                exit: styles.ContactListItemFadeExit,\r\n                                exitActive:\r\n                                    styles.ContactListItemFadeExitActive,\r\n                            }}\r\n                            key={contact.id}\r\n                        >\r\n                            <li className={styles.Contact}>\r\n                                <span className={styles.ContactInfo}>\r\n                                    {contact.name} : {contact.number}\r\n                                </span>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                        deleteContact(contact.id)\r\n                                        if (contacts.length == 2) {\r\n                                            resetFilter()\r\n                                        }\r\n                                    }}\r\n                                    className={styles.DeleteBtn}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </li>\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filteredContacts: phonebookSelectors.getfilteredElements(state),\r\n    resetFilter: phonebookSelectors.getFilter(state),\r\n    contacts: phonebookSelectors.getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteContact: (id) => {\r\n        dispatch(phonebookOperations.deleteContact(id))\r\n    },\r\n    resetFilter: () => {\r\n        dispatch(changeFilter(''))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from 'react'\r\nimport Spinner from 'react-loader-spinner'\r\n\r\nexport default class Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Spinner\r\n                    type=\"ThreeDots\"\r\n                    color=\"#ff3b0f\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './Filter.module.css'\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\n\r\nfunction Filter({ contacts, value, filter }) {\r\n    return (\r\n        <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={{\r\n                enter: styles.FilterFadeEnter,\r\n                enterActive: styles.FilterFadeEnterActive,\r\n                exit: styles.FilterFadeExit,\r\n                exitActive: styles.FilterFadeExitActive,\r\n            }}\r\n        >\r\n            <div className={styles.Container}>\r\n                <label className={styles.InputContainer}>\r\n                    <h1 className={styles.FilterHeader}>\r\n                        Find contacts by Name\r\n                    </h1>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={filter}\r\n                        className={styles.FilterInput}\r\n                    />\r\n                </label>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst resetFilter = (state) => {\r\n    if (state.length == 2) {\r\n        return ''\r\n    } else {\r\n        return state.contacts.filter\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n    value: phonebookSelectors.getFilter(state),\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    filter: (event) => dispatch(changeFilter(event.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { CSSTransition } from 'react-transition-group'\nimport phonebookOperations from '../src/redux/phonebook/phonebook-operations'\nimport ContactForm from './components/Contactform/ContactForm'\nimport ContactList from './components/ContactList/ContactList'\nimport contactSelectors from './redux/phonebook/phonebook-selectors'\nimport Loader from '../src/components/Loader/Loader'\nimport Filter from './components/Filter/Filter'\nimport styles from './App.module.css'\nimport './App.css'\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.fetchContacts()\n    }\n\n    render() {\n        return (\n            <div className={styles.Container}>\n                <CSSTransition\n                    in={true}\n                    appear={true}\n                    timeout={500}\n                    classNames={{\n                        appear: styles.HeaderFadeAppear,\n                        appearActive: styles.HeaderFadeAppearActive,\n                    }}\n                >\n                    <h1>Phonebook</h1>\n                </CSSTransition>\n\n                <ContactForm />\n\n                <CSSTransition\n                    in={this.props.contacts.length >= 1}\n                    timeout={0}\n                    unmountOnExit\n                >\n                    <Filter />\n                </CSSTransition>\n                {this.props.isLosdingContats && <Loader />}\n                <CSSTransition\n                    in={this.props.contacts.length > 0}\n                    timeout={250}\n                    unmountOnExit\n                >\n                    <ContactList />\n                </CSSTransition>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    contacts: state.contacts.items,\n    isLosdingContats: contactSelectors.getLoading(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    // deleteContact,\r\n    changeFilter,\r\n} from './phonebook-actions'\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (state, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n})\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n})\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n})\r\n\r\nconst error = createReducer(null, {})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error,\r\n})\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport phoneBookReducer from '../phonebook/phonebook-reducers'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\n\r\nconst persistConfig = {\r\n    key: 'myRoot',\r\n    storage,\r\n}\r\n\r\nconst phonebookPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n]\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(phonebookPersistConfig, phoneBookReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/phonebook/store'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__Uos1u\",\"InputName\":\"ContactForm_InputName__sgWiG\",\"FormInput\":\"ContactForm_FormInput__1F9N2\",\"FormBtn\":\"ContactForm_FormBtn__2Orhl\",\"ContactFormNotificationFadeEnter\":\"ContactForm_ContactFormNotificationFadeEnter__1eawX\",\"ContactFormNotificationFadeEnterActive\":\"ContactForm_ContactFormNotificationFadeEnterActive__NU2iY\",\"ContactFormNotificationFadeExit\":\"ContactForm_ContactFormNotificationFadeExit__13AHV\",\"ContactFormNotificationFadeExitActive\":\"ContactForm_ContactFormNotificationFadeExitActive__3zcrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__DCFOg\",\"InputContainer\":\"Filter_InputContainer__31DhS\",\"FilterInput\":\"Filter_FilterInput__3b17U\",\"FilterHeader\":\"Filter_FilterHeader__P2Sw1\",\"FilterFadeEnter\":\"Filter_FilterFadeEnter__YEpEw\",\"FilterFadeEnterActive\":\"Filter_FilterFadeEnterActive__NclmL\",\"FilterFadeExit\":\"Filter_FilterFadeExit__1HL1h\",\"FilterFadeExitActive\":\"Filter_FilterFadeExitActive__13ItL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__32BAl\",\"HeaderFadeAppear\":\"App_HeaderFadeAppear__2dQfI\",\"HeaderFadeAppearActive\":\"App_HeaderFadeAppearActive__25N3g\",\"ContactListFadeEnter\":\"App_ContactListFadeEnter__2ySjN\",\"ContactListFadeEnterActive\":\"App_ContactListFadeEnterActive__3rdaC\",\"ContactListFadeExit\":\"App_ContactListFadeExit__3F8U5\",\"ContactListFadeExitActive\":\"App_ContactListFadeExitActive__2RiiG\",\"ContactListFadeAppear\":\"App_ContactListFadeAppear__354T5\",\"ContactListFadeAppearActive\":\"App_ContactListFadeAppearActive__31HKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2F8sU\",\"FormBtn\":\"Notification_FormBtn__Kj_aC\"};"],"sourceRoot":""}